第一次 关于 ssm框架整合
用到的东西
1.druid连接池 感谢陈老板 在c30连接池 多次炸车之后 
所谓连接池 就是因为 在每次提交事务时都要重新新建连接 导致运行速度过慢
于是使用连接池技术 让连接提交事务之后 不马上断开 还是 放在连接池中 取得时候拿出来 即可 
同时 使用多线程 速度会快 快多少 不知道
2.pageHelper Java的分页小插件 用起来蛮顺手的

说说 项目本身 
因为算是 第一次ssm框架做的小项目 有些东西（挺多的）想的不怎么清楚
算是 我自己乱写的 导致开发速度过慢 本来说是两周写完 不然提头来见(划掉) 然后拖到了第三周

项目本身算是简单的 图书管理系统
读者 可以借还书 注册 有罚金系统和预约系统 
罚金系统：一本书只能借 过了一个月 换的时候 没超过一天 会算一块钱罚金（暴利啊）
罚金没还完的时候 不让借书

预约系统：一种书 如果全部处于不可借状态 会导致预约事件发生 一个人只能预约一本书
如果 之前有预约会被覆盖掉 在其他读者还书或是 管理员整理的时候
如果书可借 就会找到 最先预约这本书的人 在他上线的时候 通知他

然后是管理员 管理员分权限 现在只有两种 普通管理员和root 

管理员 无法注册 只能由root创建 很科学啊 哪有管理员自己注册的
管理可以修改书籍信息 插入书籍信息
当插入书籍信息 是原本处于 书籍中的 那么就会出发 新增书籍 
如果不是的话 就会 触发创建书籍

同理 删除最后一本书籍 会将整个书籍信息删除

然后是校验系统 分前后端校验 前端万一乱改代码 前端就会被欺骗
这个时候 后端校验 就很有用了

<h2>改进之处</h2>
呃 从开发效率来讲 算是可以再提升一个台阶 把插入用动态sql改一改

从功能上来讲 可以在添加多个权限等级 ()
            还可以用邮箱验证注册
            解决幻读问题(emmm)这个偷懒了 在最后一天想到这个问题 之后加吧
            高并发？？？抢书系统 还行
            
<h2>接下来的事</h2>
接下来 可能要鸽一段时间 去搞高并发缓存抢单系统 为什么呢
这就不得不说起 B站 春节的抢单系统 怨念很大 待我高并发大成 线程池抢单最为致命

最后
最后提一点 一入前端毁终生
最后 
