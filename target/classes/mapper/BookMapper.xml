<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hisen.dao.BookDao">
  <!-- 目的：为dao接口方法提供sql语句配置 -->

  <resultMap id="BookWithPic" type="com.hisen.entity.Book">
    <!--private long bookId;-->
    <!--private String name;-->
    <!--private int number;-->
    <!--private String detail;-->
    <!--private String picId;-->
    <!--private Pic pic;-->
    <id column="book_id" property="bookId"/>
    <result column="name" property="name"/>
    <result column="number" property="number"/>
    <result column="detail" property="detail"/>
    <result column="picId" property="picId"/>
    <association property="pic" javaType="com.hisen.entity.Pic">
      <id column="picId" property="picId"/>
      <result column="pic" property="pic"/>
    </association>

  </resultMap>
  <select id="queryById" resultType="Book" parameterType="long">
    <!-- 具体的sql -->
    SELECT
    book_id,
    name,
    number,
    detail,
    picId
    FROM
    book
    WHERE
    book_id = #{bookId}
  </select>
  <select id="queryAll" resultType="Book">
    SELECT
    book_id,
    name,
    number,
    detail,
    picId
    FROM
    book
    ORDER BY
    book_id
    LIMIT #{offset}, #{limit}
  </select>
  <select id="queryByIdWithPic" resultMap="BookWithPic" parameterType="long">
    <!-- 具体的sql -->
    SELECT
    book_id,
    name,
    number,
    detail,
    pic.picId picId,
    pic.pic
    FROM
    book,pic
    WHERE
    book_id = #{bookId} AND
    book.picId = pic.picId
  </select>
  <select id="queryAllWithPic" resultMap="BookWithPic">
    SELECT
    book_id,
    name,
    number,
    detail,
    pic.picId picId,
    pic.pic pic
    FROM
    book,pic
    WHERE
    book.picId = pic.picId
    ORDER BY
    book_id
    LIMIT #{offset}, #{limit}
  </select>


  <update id="updateBook" parameterType="Book">
    UPDATE book
    SET NAME = #{name},
    NUMBER = #{number},
    detail = #{detail}
    WHERE
    book_id = #{bookId}
    AND number > 0
  </update>

  <insert id="addBook">
    INSERT INTO book(`book_id`, `name`, `number`,`detail`)
    VALUES(#{bookId}, #{name}, #{number}, #{detail})
  </insert>

  <delete id="deleteBookById">
    DELETE FROM book WHERE book_id = #{bookId}
  </delete>
</mapper>